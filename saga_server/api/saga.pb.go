// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.3
// source: protos/saga.proto

package api

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type TxState int32

const (
	TxState_PROCESSING         TxState = 0 // 正常处理事务中
	TxState_COMMITTED          TxState = 1 // 整个sagaId/branchId处理成功
	TxState_COMPENSATION_DOING TxState = 2 // 补偿任务执行中
	TxState_COMPENSATION_ERROR TxState = 3 // 补偿任务某次执行失败
	TxState_COMPENSATION_DONE  TxState = 4 // 补偿任务执行完成
	TxState_COMPENSATION_FAIL  TxState = 5 // 补偿任务多次执行过程整体失败
)

// Enum value maps for TxState.
var (
	TxState_name = map[int32]string{
		0: "PROCESSING",
		1: "COMMITTED",
		2: "COMPENSATION_DOING",
		3: "COMPENSATION_ERROR",
		4: "COMPENSATION_DONE",
		5: "COMPENSATION_FAIL",
	}
	TxState_value = map[string]int32{
		"PROCESSING":         0,
		"COMMITTED":          1,
		"COMPENSATION_DOING": 2,
		"COMPENSATION_ERROR": 3,
		"COMPENSATION_DONE":  4,
		"COMPENSATION_FAIL":  5,
	}
)

func (x TxState) Enum() *TxState {
	p := new(TxState)
	*p = x
	return p
}

func (x TxState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TxState) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_saga_proto_enumTypes[0].Descriptor()
}

func (TxState) Type() protoreflect.EnumType {
	return &file_protos_saga_proto_enumTypes[0]
}

func (x TxState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TxState.Descriptor instead.
func (TxState) EnumDescriptor() ([]byte, []int) {
	return file_protos_saga_proto_rawDescGZIP(), []int{0}
}

type NodeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group      string `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Service    string `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	InstanceId string `protobuf:"bytes,3,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
}

func (x *NodeInfo) Reset() {
	*x = NodeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_saga_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInfo) ProtoMessage() {}

func (x *NodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protos_saga_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInfo.ProtoReflect.Descriptor instead.
func (*NodeInfo) Descriptor() ([]byte, []int) {
	return file_protos_saga_proto_rawDescGZIP(), []int{0}
}

func (x *NodeInfo) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *NodeInfo) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *NodeInfo) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type CreateGlobalTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node          *NodeInfo `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	ExpireSeconds int64     `protobuf:"varint,2,opt,name=expireSeconds,proto3" json:"expireSeconds,omitempty"` // tx expire after {expireSeconds} seconds
	Extra         string    `protobuf:"bytes,3,opt,name=extra,proto3" json:"extra,omitempty"`                  // extra info
}

func (x *CreateGlobalTransactionRequest) Reset() {
	*x = CreateGlobalTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_saga_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGlobalTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGlobalTransactionRequest) ProtoMessage() {}

func (x *CreateGlobalTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_saga_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGlobalTransactionRequest.ProtoReflect.Descriptor instead.
func (*CreateGlobalTransactionRequest) Descriptor() ([]byte, []int) {
	return file_protos_saga_proto_rawDescGZIP(), []int{1}
}

func (x *CreateGlobalTransactionRequest) GetNode() *NodeInfo {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *CreateGlobalTransactionRequest) GetExpireSeconds() int64 {
	if x != nil {
		return x.ExpireSeconds
	}
	return 0
}

func (x *CreateGlobalTransactionRequest) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

type CreateGlobalTransactionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // code == 0 means success
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Xid   string `protobuf:"bytes,3,opt,name=xid,proto3" json:"xid,omitempty"`
}

func (x *CreateGlobalTransactionReply) Reset() {
	*x = CreateGlobalTransactionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_saga_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGlobalTransactionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGlobalTransactionReply) ProtoMessage() {}

func (x *CreateGlobalTransactionReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_saga_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGlobalTransactionReply.ProtoReflect.Descriptor instead.
func (*CreateGlobalTransactionReply) Descriptor() ([]byte, []int) {
	return file_protos_saga_proto_rawDescGZIP(), []int{2}
}

func (x *CreateGlobalTransactionReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateGlobalTransactionReply) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *CreateGlobalTransactionReply) GetXid() string {
	if x != nil {
		return x.Xid
	}
	return ""
}

type CreateBranchTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node                         *NodeInfo `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	BranchServiceKey             string    `protobuf:"bytes,2,opt,name=branchServiceKey,proto3" json:"branchServiceKey,omitempty"`
	BranchCompensationServiceKey string    `protobuf:"bytes,3,opt,name=branchCompensationServiceKey,proto3" json:"branchCompensationServiceKey,omitempty"`
	Xid                          string    `protobuf:"bytes,4,opt,name=xid,proto3" json:"xid,omitempty"`
}

func (x *CreateBranchTransactionRequest) Reset() {
	*x = CreateBranchTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_saga_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBranchTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBranchTransactionRequest) ProtoMessage() {}

func (x *CreateBranchTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_saga_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBranchTransactionRequest.ProtoReflect.Descriptor instead.
func (*CreateBranchTransactionRequest) Descriptor() ([]byte, []int) {
	return file_protos_saga_proto_rawDescGZIP(), []int{3}
}

func (x *CreateBranchTransactionRequest) GetNode() *NodeInfo {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *CreateBranchTransactionRequest) GetBranchServiceKey() string {
	if x != nil {
		return x.BranchServiceKey
	}
	return ""
}

func (x *CreateBranchTransactionRequest) GetBranchCompensationServiceKey() string {
	if x != nil {
		return x.BranchCompensationServiceKey
	}
	return ""
}

func (x *CreateBranchTransactionRequest) GetXid() string {
	if x != nil {
		return x.Xid
	}
	return ""
}

type CreateBranchTransactionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // code == 0 means success
	Error    string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	BranchId string `protobuf:"bytes,3,opt,name=branchId,proto3" json:"branchId,omitempty"`
}

func (x *CreateBranchTransactionReply) Reset() {
	*x = CreateBranchTransactionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_saga_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBranchTransactionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBranchTransactionReply) ProtoMessage() {}

func (x *CreateBranchTransactionReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_saga_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBranchTransactionReply.ProtoReflect.Descriptor instead.
func (*CreateBranchTransactionReply) Descriptor() ([]byte, []int) {
	return file_protos_saga_proto_rawDescGZIP(), []int{4}
}

func (x *CreateBranchTransactionReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateBranchTransactionReply) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *CreateBranchTransactionReply) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

type QueryGlobalTransactionDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Xid string `protobuf:"bytes,1,opt,name=xid,proto3" json:"xid,omitempty"`
}

func (x *QueryGlobalTransactionDetailRequest) Reset() {
	*x = QueryGlobalTransactionDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_saga_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGlobalTransactionDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGlobalTransactionDetailRequest) ProtoMessage() {}

func (x *QueryGlobalTransactionDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_saga_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryGlobalTransactionDetailRequest.ProtoReflect.Descriptor instead.
func (*QueryGlobalTransactionDetailRequest) Descriptor() ([]byte, []int) {
	return file_protos_saga_proto_rawDescGZIP(), []int{5}
}

func (x *QueryGlobalTransactionDetailRequest) GetXid() string {
	if x != nil {
		return x.Xid
	}
	return ""
}

type TransactionBranchDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchId                     string    `protobuf:"bytes,1,opt,name=branchId,proto3" json:"branchId,omitempty"`
	Node                         *NodeInfo `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	State                        TxState   `protobuf:"varint,3,opt,name=state,proto3,enum=saga.TxState" json:"state,omitempty"`
	CompensationFailTimes        int32     `protobuf:"varint,4,opt,name=compensationFailTimes,proto3" json:"compensationFailTimes,omitempty"` // 本branch的补偿任务失败重试次数
	BranchServiceKey             string    `protobuf:"bytes,5,opt,name=branchServiceKey,proto3" json:"branchServiceKey,omitempty"`
	BranchCompensationServiceKey string    `protobuf:"bytes,6,opt,name=branchCompensationServiceKey,proto3" json:"branchCompensationServiceKey,omitempty"`
	Version                      int32     `protobuf:"varint,7,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *TransactionBranchDetail) Reset() {
	*x = TransactionBranchDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_saga_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionBranchDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionBranchDetail) ProtoMessage() {}

func (x *TransactionBranchDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protos_saga_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionBranchDetail.ProtoReflect.Descriptor instead.
func (*TransactionBranchDetail) Descriptor() ([]byte, []int) {
	return file_protos_saga_proto_rawDescGZIP(), []int{6}
}

func (x *TransactionBranchDetail) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

func (x *TransactionBranchDetail) GetNode() *NodeInfo {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *TransactionBranchDetail) GetState() TxState {
	if x != nil {
		return x.State
	}
	return TxState_PROCESSING
}

func (x *TransactionBranchDetail) GetCompensationFailTimes() int32 {
	if x != nil {
		return x.CompensationFailTimes
	}
	return 0
}

func (x *TransactionBranchDetail) GetBranchServiceKey() string {
	if x != nil {
		return x.BranchServiceKey
	}
	return ""
}

func (x *TransactionBranchDetail) GetBranchCompensationServiceKey() string {
	if x != nil {
		return x.BranchCompensationServiceKey
	}
	return ""
}

func (x *TransactionBranchDetail) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type QueryGlobalTransactionDetailReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        int32                      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // code == 0 means success
	Error       string                     `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Xid         string                     `protobuf:"bytes,3,opt,name=xid,proto3" json:"xid,omitempty"`
	Branches    []*TransactionBranchDetail `protobuf:"bytes,4,rep,name=branches,proto3" json:"branches,omitempty"`
	StarterNode *NodeInfo                  `protobuf:"bytes,5,opt,name=starterNode,proto3" json:"starterNode,omitempty"`
	State       TxState                    `protobuf:"varint,6,opt,name=state,proto3,enum=saga.TxState" json:"state,omitempty"`
	Version     int32                      `protobuf:"varint,7,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *QueryGlobalTransactionDetailReply) Reset() {
	*x = QueryGlobalTransactionDetailReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_saga_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGlobalTransactionDetailReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGlobalTransactionDetailReply) ProtoMessage() {}

func (x *QueryGlobalTransactionDetailReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_saga_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryGlobalTransactionDetailReply.ProtoReflect.Descriptor instead.
func (*QueryGlobalTransactionDetailReply) Descriptor() ([]byte, []int) {
	return file_protos_saga_proto_rawDescGZIP(), []int{7}
}

func (x *QueryGlobalTransactionDetailReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *QueryGlobalTransactionDetailReply) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *QueryGlobalTransactionDetailReply) GetXid() string {
	if x != nil {
		return x.Xid
	}
	return ""
}

func (x *QueryGlobalTransactionDetailReply) GetBranches() []*TransactionBranchDetail {
	if x != nil {
		return x.Branches
	}
	return nil
}

func (x *QueryGlobalTransactionDetailReply) GetStarterNode() *NodeInfo {
	if x != nil {
		return x.StarterNode
	}
	return nil
}

func (x *QueryGlobalTransactionDetailReply) GetState() TxState {
	if x != nil {
		return x.State
	}
	return TxState_PROCESSING
}

func (x *QueryGlobalTransactionDetailReply) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type SubmitGlobalTransactionStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Xid        string  `protobuf:"bytes,1,opt,name=xid,proto3" json:"xid,omitempty"`
	OldState   TxState `protobuf:"varint,2,opt,name=oldState,proto3,enum=saga.TxState" json:"oldState,omitempty"`
	State      TxState `protobuf:"varint,3,opt,name=state,proto3,enum=saga.TxState" json:"state,omitempty"`
	OldVersion int32   `protobuf:"varint,4,opt,name=oldVersion,proto3" json:"oldVersion,omitempty"` // 修改前的全局事务的版本号
}

func (x *SubmitGlobalTransactionStateRequest) Reset() {
	*x = SubmitGlobalTransactionStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_saga_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitGlobalTransactionStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitGlobalTransactionStateRequest) ProtoMessage() {}

func (x *SubmitGlobalTransactionStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_saga_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitGlobalTransactionStateRequest.ProtoReflect.Descriptor instead.
func (*SubmitGlobalTransactionStateRequest) Descriptor() ([]byte, []int) {
	return file_protos_saga_proto_rawDescGZIP(), []int{8}
}

func (x *SubmitGlobalTransactionStateRequest) GetXid() string {
	if x != nil {
		return x.Xid
	}
	return ""
}

func (x *SubmitGlobalTransactionStateRequest) GetOldState() TxState {
	if x != nil {
		return x.OldState
	}
	return TxState_PROCESSING
}

func (x *SubmitGlobalTransactionStateRequest) GetState() TxState {
	if x != nil {
		return x.State
	}
	return TxState_PROCESSING
}

func (x *SubmitGlobalTransactionStateRequest) GetOldVersion() int32 {
	if x != nil {
		return x.OldVersion
	}
	return 0
}

type SubmitGlobalTransactionStateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  int32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // code == 0 means success
	Error string  `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	State TxState `protobuf:"varint,3,opt,name=state,proto3,enum=saga.TxState" json:"state,omitempty"` // 修改后的saga state
}

func (x *SubmitGlobalTransactionStateReply) Reset() {
	*x = SubmitGlobalTransactionStateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_saga_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitGlobalTransactionStateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitGlobalTransactionStateReply) ProtoMessage() {}

func (x *SubmitGlobalTransactionStateReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_saga_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitGlobalTransactionStateReply.ProtoReflect.Descriptor instead.
func (*SubmitGlobalTransactionStateReply) Descriptor() ([]byte, []int) {
	return file_protos_saga_proto_rawDescGZIP(), []int{9}
}

func (x *SubmitGlobalTransactionStateReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SubmitGlobalTransactionStateReply) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *SubmitGlobalTransactionStateReply) GetState() TxState {
	if x != nil {
		return x.State
	}
	return TxState_PROCESSING
}

type SubmitBranchTransactionStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Xid        string  `protobuf:"bytes,1,opt,name=xid,proto3" json:"xid,omitempty"`
	BranchId   string  `protobuf:"bytes,2,opt,name=branchId,proto3" json:"branchId,omitempty"`
	OldState   TxState `protobuf:"varint,3,opt,name=oldState,proto3,enum=saga.TxState" json:"oldState,omitempty"`
	State      TxState `protobuf:"varint,4,opt,name=state,proto3,enum=saga.TxState" json:"state,omitempty"`
	OldVersion int32   `protobuf:"varint,5,opt,name=oldVersion,proto3" json:"oldVersion,omitempty"` // 修改前的分支事务的版本号
	JobId      string  `protobuf:"bytes,6,opt,name=jobId,proto3" json:"jobId,omitempty"`            // 每次分支执行每次任务或者补偿任务都有一个不同的jobId
}

func (x *SubmitBranchTransactionStateRequest) Reset() {
	*x = SubmitBranchTransactionStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_saga_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitBranchTransactionStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitBranchTransactionStateRequest) ProtoMessage() {}

func (x *SubmitBranchTransactionStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_saga_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitBranchTransactionStateRequest.ProtoReflect.Descriptor instead.
func (*SubmitBranchTransactionStateRequest) Descriptor() ([]byte, []int) {
	return file_protos_saga_proto_rawDescGZIP(), []int{10}
}

func (x *SubmitBranchTransactionStateRequest) GetXid() string {
	if x != nil {
		return x.Xid
	}
	return ""
}

func (x *SubmitBranchTransactionStateRequest) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

func (x *SubmitBranchTransactionStateRequest) GetOldState() TxState {
	if x != nil {
		return x.OldState
	}
	return TxState_PROCESSING
}

func (x *SubmitBranchTransactionStateRequest) GetState() TxState {
	if x != nil {
		return x.State
	}
	return TxState_PROCESSING
}

func (x *SubmitBranchTransactionStateRequest) GetOldVersion() int32 {
	if x != nil {
		return x.OldVersion
	}
	return 0
}

func (x *SubmitBranchTransactionStateRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

type SubmitBranchTransactionStateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  int32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // code == 0 means success
	Error string  `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	State TxState `protobuf:"varint,3,opt,name=state,proto3,enum=saga.TxState" json:"state,omitempty"` // 修改后的branch state
}

func (x *SubmitBranchTransactionStateReply) Reset() {
	*x = SubmitBranchTransactionStateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_saga_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitBranchTransactionStateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitBranchTransactionStateReply) ProtoMessage() {}

func (x *SubmitBranchTransactionStateReply) ProtoReflect() protoreflect.Message {
	mi := &file_protos_saga_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitBranchTransactionStateReply.ProtoReflect.Descriptor instead.
func (*SubmitBranchTransactionStateReply) Descriptor() ([]byte, []int) {
	return file_protos_saga_proto_rawDescGZIP(), []int{11}
}

func (x *SubmitBranchTransactionStateReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SubmitBranchTransactionStateReply) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *SubmitBranchTransactionStateReply) GetState() TxState {
	if x != nil {
		return x.State
	}
	return TxState_PROCESSING
}

var File_protos_saga_proto protoreflect.FileDescriptor

var file_protos_saga_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x73, 0x61, 0x67, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x04, 0x73, 0x61, 0x67, 0x61, 0x22, 0x5a, 0x0a, 0x08, 0x4e, 0x6f, 0x64,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x61, 0x67, 0x61, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x22, 0x5a, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x78, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x78, 0x69, 0x64, 0x22, 0xc6, 0x01, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x61, 0x67, 0x61, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x62,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x42, 0x0a, 0x1c, 0x62, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x6e, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1c, 0x62,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x6e, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x78,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x78, 0x69, 0x64, 0x22, 0x64, 0x0a,
	0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x23, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x78, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x78, 0x69, 0x64, 0x22, 0xbe, 0x02, 0x0a,
	0x17, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x61, 0x67, 0x61, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x73, 0x61, 0x67, 0x61, 0x2e, 0x54,
	0x78, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a,
	0x15, 0x63, 0x6f, 0x6d, 0x70, 0x65, 0x6e, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69,
	0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x63, 0x6f,
	0x6d, 0x70, 0x65, 0x6e, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x12,
	0x42, 0x0a, 0x1c, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x6e, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1c, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x43, 0x6f, 0x6d,
	0x70, 0x65, 0x6e, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x8b, 0x02,
	0x0a, 0x21, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x10, 0x0a,
	0x03, 0x78, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x78, 0x69, 0x64, 0x12,
	0x39, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x61, 0x67, 0x61, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x0b, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x73, 0x61, 0x67, 0x61, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x73, 0x61,
	0x67, 0x61, 0x2e, 0x54, 0x78, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xa7, 0x01, 0x0a, 0x23,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x78, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x78, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x08, 0x6f, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x73, 0x61, 0x67, 0x61, 0x2e, 0x54,
	0x78, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x08, 0x6f, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x23, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0d, 0x2e, 0x73, 0x61, 0x67, 0x61, 0x2e, 0x54, 0x78, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x6c, 0x64, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6f, 0x6c, 0x64, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x72, 0x0a, 0x21, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x47,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x73, 0x61, 0x67, 0x61, 0x2e, 0x54, 0x78, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xd9, 0x01, 0x0a, 0x23, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x78, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x78, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x12,
	0x29, 0x0a, 0x08, 0x6f, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0d, 0x2e, 0x73, 0x61, 0x67, 0x61, 0x2e, 0x54, 0x78, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x08, 0x6f, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x73, 0x61, 0x67, 0x61,
	0x2e, 0x54, 0x78, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x6f, 0x6c, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x6f, 0x6c, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6a, 0x6f, 0x62, 0x49, 0x64, 0x22, 0x72, 0x0a, 0x21, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x42,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x73, 0x61, 0x67, 0x61, 0x2e, 0x54, 0x78, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2a, 0x86, 0x01, 0x0a, 0x07, 0x54, 0x78,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53,
	0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x54, 0x54,
	0x45, 0x44, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4f, 0x4d, 0x50, 0x45, 0x4e, 0x53, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x4f, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12,
	0x43, 0x4f, 0x4d, 0x50, 0x45, 0x4e, 0x53, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x4f, 0x4d, 0x50, 0x45, 0x4e, 0x53, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x4f, 0x4e, 0x45, 0x10, 0x04, 0x12, 0x15, 0x0a, 0x11, 0x43,
	0x4f, 0x4d, 0x50, 0x45, 0x4e, 0x53, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c,
	0x10, 0x05, 0x32, 0xb2, 0x04, 0x0a, 0x0a, 0x53, 0x61, 0x67, 0x61, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x12, 0x63, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x73,
	0x61, 0x67, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x61, 0x67, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x63, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x24, 0x2e, 0x73, 0x61, 0x67, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x61, 0x67, 0x61, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x72, 0x0a, 0x1c, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x29, 0x2e, 0x73, 0x61,
	0x67, 0x61, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x73, 0x61, 0x67, 0x61, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x72, 0x0a, 0x1c, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x29, 0x2e, 0x73, 0x61, 0x67, 0x61, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x73, 0x61, 0x67,
	0x61, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x72, 0x0a, 0x1c, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x42, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x29, 0x2e, 0x73, 0x61, 0x67, 0x61, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27,
	0x2e, 0x73, 0x61, 0x67, 0x61, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x42, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x15, 0x5a, 0x05, 0x2e, 0x3b, 0x61, 0x70, 0x69,
	0xaa, 0x02, 0x0b, 0x73, 0x61, 0x67, 0x61, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_saga_proto_rawDescOnce sync.Once
	file_protos_saga_proto_rawDescData = file_protos_saga_proto_rawDesc
)

func file_protos_saga_proto_rawDescGZIP() []byte {
	file_protos_saga_proto_rawDescOnce.Do(func() {
		file_protos_saga_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_saga_proto_rawDescData)
	})
	return file_protos_saga_proto_rawDescData
}

var file_protos_saga_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_protos_saga_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_protos_saga_proto_goTypes = []interface{}{
	(TxState)(0),                                // 0: saga.TxState
	(*NodeInfo)(nil),                            // 1: saga.NodeInfo
	(*CreateGlobalTransactionRequest)(nil),      // 2: saga.CreateGlobalTransactionRequest
	(*CreateGlobalTransactionReply)(nil),        // 3: saga.CreateGlobalTransactionReply
	(*CreateBranchTransactionRequest)(nil),      // 4: saga.CreateBranchTransactionRequest
	(*CreateBranchTransactionReply)(nil),        // 5: saga.CreateBranchTransactionReply
	(*QueryGlobalTransactionDetailRequest)(nil), // 6: saga.QueryGlobalTransactionDetailRequest
	(*TransactionBranchDetail)(nil),             // 7: saga.TransactionBranchDetail
	(*QueryGlobalTransactionDetailReply)(nil),   // 8: saga.QueryGlobalTransactionDetailReply
	(*SubmitGlobalTransactionStateRequest)(nil), // 9: saga.SubmitGlobalTransactionStateRequest
	(*SubmitGlobalTransactionStateReply)(nil),   // 10: saga.SubmitGlobalTransactionStateReply
	(*SubmitBranchTransactionStateRequest)(nil), // 11: saga.SubmitBranchTransactionStateRequest
	(*SubmitBranchTransactionStateReply)(nil),   // 12: saga.SubmitBranchTransactionStateReply
}
var file_protos_saga_proto_depIdxs = []int32{
	1,  // 0: saga.CreateGlobalTransactionRequest.node:type_name -> saga.NodeInfo
	1,  // 1: saga.CreateBranchTransactionRequest.node:type_name -> saga.NodeInfo
	1,  // 2: saga.TransactionBranchDetail.node:type_name -> saga.NodeInfo
	0,  // 3: saga.TransactionBranchDetail.state:type_name -> saga.TxState
	7,  // 4: saga.QueryGlobalTransactionDetailReply.branches:type_name -> saga.TransactionBranchDetail
	1,  // 5: saga.QueryGlobalTransactionDetailReply.starterNode:type_name -> saga.NodeInfo
	0,  // 6: saga.QueryGlobalTransactionDetailReply.state:type_name -> saga.TxState
	0,  // 7: saga.SubmitGlobalTransactionStateRequest.oldState:type_name -> saga.TxState
	0,  // 8: saga.SubmitGlobalTransactionStateRequest.state:type_name -> saga.TxState
	0,  // 9: saga.SubmitGlobalTransactionStateReply.state:type_name -> saga.TxState
	0,  // 10: saga.SubmitBranchTransactionStateRequest.oldState:type_name -> saga.TxState
	0,  // 11: saga.SubmitBranchTransactionStateRequest.state:type_name -> saga.TxState
	0,  // 12: saga.SubmitBranchTransactionStateReply.state:type_name -> saga.TxState
	2,  // 13: saga.SagaServer.CreateGlobalTransaction:input_type -> saga.CreateGlobalTransactionRequest
	4,  // 14: saga.SagaServer.CreateBranchTransaction:input_type -> saga.CreateBranchTransactionRequest
	6,  // 15: saga.SagaServer.QueryGlobalTransactionDetail:input_type -> saga.QueryGlobalTransactionDetailRequest
	9,  // 16: saga.SagaServer.SubmitGlobalTransactionState:input_type -> saga.SubmitGlobalTransactionStateRequest
	11, // 17: saga.SagaServer.SubmitBranchTransactionState:input_type -> saga.SubmitBranchTransactionStateRequest
	3,  // 18: saga.SagaServer.CreateGlobalTransaction:output_type -> saga.CreateGlobalTransactionReply
	5,  // 19: saga.SagaServer.CreateBranchTransaction:output_type -> saga.CreateBranchTransactionReply
	8,  // 20: saga.SagaServer.QueryGlobalTransactionDetail:output_type -> saga.QueryGlobalTransactionDetailReply
	10, // 21: saga.SagaServer.SubmitGlobalTransactionState:output_type -> saga.SubmitGlobalTransactionStateReply
	12, // 22: saga.SagaServer.SubmitBranchTransactionState:output_type -> saga.SubmitBranchTransactionStateReply
	18, // [18:23] is the sub-list for method output_type
	13, // [13:18] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_protos_saga_proto_init() }
func file_protos_saga_proto_init() {
	if File_protos_saga_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_saga_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_saga_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGlobalTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_saga_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGlobalTransactionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_saga_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBranchTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_saga_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBranchTransactionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_saga_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGlobalTransactionDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_saga_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionBranchDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_saga_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGlobalTransactionDetailReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_saga_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitGlobalTransactionStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_saga_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitGlobalTransactionStateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_saga_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitBranchTransactionStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_saga_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitBranchTransactionStateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_saga_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_saga_proto_goTypes,
		DependencyIndexes: file_protos_saga_proto_depIdxs,
		EnumInfos:         file_protos_saga_proto_enumTypes,
		MessageInfos:      file_protos_saga_proto_msgTypes,
	}.Build()
	File_protos_saga_proto = out.File
	file_protos_saga_proto_rawDesc = nil
	file_protos_saga_proto_goTypes = nil
	file_protos_saga_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SagaServerClient is the client API for SagaServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SagaServerClient interface {
	CreateGlobalTransaction(ctx context.Context, in *CreateGlobalTransactionRequest, opts ...grpc.CallOption) (*CreateGlobalTransactionReply, error)
	CreateBranchTransaction(ctx context.Context, in *CreateBranchTransactionRequest, opts ...grpc.CallOption) (*CreateBranchTransactionReply, error)
	QueryGlobalTransactionDetail(ctx context.Context, in *QueryGlobalTransactionDetailRequest, opts ...grpc.CallOption) (*QueryGlobalTransactionDetailReply, error)
	SubmitGlobalTransactionState(ctx context.Context, in *SubmitGlobalTransactionStateRequest, opts ...grpc.CallOption) (*SubmitGlobalTransactionStateReply, error)
	SubmitBranchTransactionState(ctx context.Context, in *SubmitBranchTransactionStateRequest, opts ...grpc.CallOption) (*SubmitBranchTransactionStateReply, error)
}

type sagaServerClient struct {
	cc grpc.ClientConnInterface
}

func NewSagaServerClient(cc grpc.ClientConnInterface) SagaServerClient {
	return &sagaServerClient{cc}
}

func (c *sagaServerClient) CreateGlobalTransaction(ctx context.Context, in *CreateGlobalTransactionRequest, opts ...grpc.CallOption) (*CreateGlobalTransactionReply, error) {
	out := new(CreateGlobalTransactionReply)
	err := c.cc.Invoke(ctx, "/saga.SagaServer/CreateGlobalTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sagaServerClient) CreateBranchTransaction(ctx context.Context, in *CreateBranchTransactionRequest, opts ...grpc.CallOption) (*CreateBranchTransactionReply, error) {
	out := new(CreateBranchTransactionReply)
	err := c.cc.Invoke(ctx, "/saga.SagaServer/CreateBranchTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sagaServerClient) QueryGlobalTransactionDetail(ctx context.Context, in *QueryGlobalTransactionDetailRequest, opts ...grpc.CallOption) (*QueryGlobalTransactionDetailReply, error) {
	out := new(QueryGlobalTransactionDetailReply)
	err := c.cc.Invoke(ctx, "/saga.SagaServer/QueryGlobalTransactionDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sagaServerClient) SubmitGlobalTransactionState(ctx context.Context, in *SubmitGlobalTransactionStateRequest, opts ...grpc.CallOption) (*SubmitGlobalTransactionStateReply, error) {
	out := new(SubmitGlobalTransactionStateReply)
	err := c.cc.Invoke(ctx, "/saga.SagaServer/SubmitGlobalTransactionState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sagaServerClient) SubmitBranchTransactionState(ctx context.Context, in *SubmitBranchTransactionStateRequest, opts ...grpc.CallOption) (*SubmitBranchTransactionStateReply, error) {
	out := new(SubmitBranchTransactionStateReply)
	err := c.cc.Invoke(ctx, "/saga.SagaServer/SubmitBranchTransactionState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SagaServerServer is the server API for SagaServer service.
type SagaServerServer interface {
	CreateGlobalTransaction(context.Context, *CreateGlobalTransactionRequest) (*CreateGlobalTransactionReply, error)
	CreateBranchTransaction(context.Context, *CreateBranchTransactionRequest) (*CreateBranchTransactionReply, error)
	QueryGlobalTransactionDetail(context.Context, *QueryGlobalTransactionDetailRequest) (*QueryGlobalTransactionDetailReply, error)
	SubmitGlobalTransactionState(context.Context, *SubmitGlobalTransactionStateRequest) (*SubmitGlobalTransactionStateReply, error)
	SubmitBranchTransactionState(context.Context, *SubmitBranchTransactionStateRequest) (*SubmitBranchTransactionStateReply, error)
}

// UnimplementedSagaServerServer can be embedded to have forward compatible implementations.
type UnimplementedSagaServerServer struct {
}

func (*UnimplementedSagaServerServer) CreateGlobalTransaction(context.Context, *CreateGlobalTransactionRequest) (*CreateGlobalTransactionReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateGlobalTransaction not implemented")
}
func (*UnimplementedSagaServerServer) CreateBranchTransaction(context.Context, *CreateBranchTransactionRequest) (*CreateBranchTransactionReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBranchTransaction not implemented")
}
func (*UnimplementedSagaServerServer) QueryGlobalTransactionDetail(context.Context, *QueryGlobalTransactionDetailRequest) (*QueryGlobalTransactionDetailReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryGlobalTransactionDetail not implemented")
}
func (*UnimplementedSagaServerServer) SubmitGlobalTransactionState(context.Context, *SubmitGlobalTransactionStateRequest) (*SubmitGlobalTransactionStateReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitGlobalTransactionState not implemented")
}
func (*UnimplementedSagaServerServer) SubmitBranchTransactionState(context.Context, *SubmitBranchTransactionStateRequest) (*SubmitBranchTransactionStateReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitBranchTransactionState not implemented")
}

func RegisterSagaServerServer(s *grpc.Server, srv SagaServerServer) {
	s.RegisterService(&_SagaServer_serviceDesc, srv)
}

func _SagaServer_CreateGlobalTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateGlobalTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SagaServerServer).CreateGlobalTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/saga.SagaServer/CreateGlobalTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SagaServerServer).CreateGlobalTransaction(ctx, req.(*CreateGlobalTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SagaServer_CreateBranchTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBranchTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SagaServerServer).CreateBranchTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/saga.SagaServer/CreateBranchTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SagaServerServer).CreateBranchTransaction(ctx, req.(*CreateBranchTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SagaServer_QueryGlobalTransactionDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGlobalTransactionDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SagaServerServer).QueryGlobalTransactionDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/saga.SagaServer/QueryGlobalTransactionDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SagaServerServer).QueryGlobalTransactionDetail(ctx, req.(*QueryGlobalTransactionDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SagaServer_SubmitGlobalTransactionState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmitGlobalTransactionStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SagaServerServer).SubmitGlobalTransactionState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/saga.SagaServer/SubmitGlobalTransactionState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SagaServerServer).SubmitGlobalTransactionState(ctx, req.(*SubmitGlobalTransactionStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SagaServer_SubmitBranchTransactionState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmitBranchTransactionStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SagaServerServer).SubmitBranchTransactionState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/saga.SagaServer/SubmitBranchTransactionState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SagaServerServer).SubmitBranchTransactionState(ctx, req.(*SubmitBranchTransactionStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SagaServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "saga.SagaServer",
	HandlerType: (*SagaServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateGlobalTransaction",
			Handler:    _SagaServer_CreateGlobalTransaction_Handler,
		},
		{
			MethodName: "CreateBranchTransaction",
			Handler:    _SagaServer_CreateBranchTransaction_Handler,
		},
		{
			MethodName: "QueryGlobalTransactionDetail",
			Handler:    _SagaServer_QueryGlobalTransactionDetail_Handler,
		},
		{
			MethodName: "SubmitGlobalTransactionState",
			Handler:    _SagaServer_SubmitGlobalTransactionState_Handler,
		},
		{
			MethodName: "SubmitBranchTransactionState",
			Handler:    _SagaServer_SubmitBranchTransactionState_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/saga.proto",
}
